#!/bin/sh
usage(){
	cat <<EOF >&2
use: $0 [-v][-c][-t teststart][-n testcount]
  run tests on the foormatic-rip filter

  -v           - fix up the results as correct
  -c           - use diff -c
  -t teststart - start with teststart
  -n testcount - do testcount tests
EOF
    exit 1;
}

test=1
count=20

echo "START" $*
while [ "$1" != "" ] ; do
    case $1 in
	-v ) fixone=yes;;
	-c ) C="-c";;
	-t ) test="$2"; shift;;
	-n ) count="$2"; shift;;
	* ) usage;;
    esac
    shift;
done

OUTDIR=./OUT
files=files;
config="--config $files/filter.conf.test"
enconfig="--config $files/en.filter.conf.test"
foomatic=${FOOMATIC:=./foomatic-rip}
ppd=$files/parse.ppd
ppd4=$files/HP4000_4.ppd
ppdfm=$files/hp2100foomatic.ppd
set -e
#debug="--debug 0x017"
debug="--debug 0x031"
options="-ZPageSize=letter -Zeven:intray2 -Zsimplex"
options="-ZPageSize=letter -Zeven:pagesize=legal -Zsimplex"

compare(){
    status=0
    set +e
	echo -n "diff $1 $files/$2 "
    if [ -n "$ignore" ] ; then
	    grep -v "$ignore" $1 >$OUTDIR/d1 || true
	    grep -v "$ignore" $files/$2 >$OUTDIR/d2 || true
	    diff ${C} $OUTDIR/d1 $OUTDIR/d2 || status=$?
    else
	diff ${C} $1 $files/$2 || status=$?
    fi
    set -e;
    # echo diff exit status $status
    if [ $status = "0" ] ; then
	echo "SAME"
    elif [ -n "$fixone" ] ; then
	echo "COPY $1 $files/$2"
	cp $1 $files/$2
	fixone=
    else
	exit 1
    fi
}

runcmd(){
	echo "$cmd";
	status=0
	(eval $cmd) || status=$?
	if [ "$status" != 0 ] ; then
	    cat $OUTDIR/log
	    exit 1
	fi
}

rm -f $OUTDIR/out $OUTDIR/log
set +x

testnum=1;
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo test 0
	echo show the ppd file from standard PPD file
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --genppd --ppd=$ppd4 $debug \
	$options >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out ppd4.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log ppd4.out.log
    fi
    ignore=
fi


testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo Test $testnum
	echo show the ppd file from test PPD file
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --genppd --ppd=$ppd $debug \
	$options >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out ppd.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log ppd.out.log
    fi
    ignore=
fi



testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo Test $testnum
	echo show the ppd file from test foomatic PPD file
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --genppd --ppd=$ppdfm $debug \
	$options >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out ppdfm.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log ppdfm.out.log
    fi
    ignore=
fi

testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo show the options
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config -d --ppd=$ppd $debug \
	$options >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out opts.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log opts.out.log
    fi
    ignore=
fi

testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo produce genpdq
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --ppd $ppd --genpdq $debug \
	$options >$OUTDIR/out"
    runcmd
    ignore='filter.conf.test\|parse.ppd\|driver .*Foo';
    compare $OUTDIR/out pdq.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log pdq.out.log
    fi
    ignore=
fi

testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo do the threepages.ps file
	echo check for constraint violations
	echo
	#debug="--debug 0x11"
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --lprng --ppd $ppd $debug  \
	$options <$files/threepages.ps >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out threepages.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log threepages.out.log
    fi
    ignore=
fi


testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo do the threepages.ps file, with foobool=true options
	echo check for new constraint violation
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --lprng --ppd $ppd $debug  \
	-Zfoobool=true \
	$options <$files/threepages.ps >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out foobool.threepages.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log foobool.threepages.out.log
    fi
    ignore=
fi

testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo now reprocess the output of the previous one, no options
	echo
	rm -f $OUTDIR/foomatic*
    #debug="--debug 0xF17"
    cmd="perl -Mdiagnostics -w $foomatic $config --lprng --ppd $ppd $debug  \
	<$OUTDIR/out >$OUTDIR/out3 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out3 out3.threepages.out
    if [ -z "$debug" ] ; then
		ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
		compare $OUTDIR/log out3.threepages.out.log
    fi
    ignore=
fi

testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo try file conversion
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --lprng --ppd $ppd $debug  \
	$options <$files/hi.txt >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    ignore='page.* on.* sheet\|^%%For:\|^%%CreationDate\|title$\|rhead$\|footer$';
    compare $OUTDIR/out hi.ps.out
    if [ -z "$debug" ] ; then
		ignore='page.* on.* sheet\|filter.conf.test\|parse.ppd\|POSTPIPE\|status 0\|standard output$\|Logger .*0$'
		compare $OUTDIR/log hi.ps.out.log
    fi
    ignore=;
fi


testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo options to printer
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config -lprng --ppd $ppd $debug  \
	$options -Zdocs <$files/hi.txt >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    ignore='Log.*line.*wrapped\|page.* on.* sheet\|^%%For:\|^%%CreationDate\|title$\|rhead$\|footer$';
    compare $OUTDIR/out opts.out.ps
    if [ -z "$debug" ] ; then
	ignore='generator finished\|page.* on.* sheet\|filter.conf.test\|parse.ppd\|POSTPIPE\|status 0\|Generating doc\|standard output$\|Logger .*0$'
	compare $OUTDIR/log opts.out.ps.log
    fi
    ignore=
fi

#debug="--debug 0x11"
testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo do the threepages.ps with -Zmulti=choice1 file
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --lprng --ppd $ppd $debug  \
	$options -Zmulti=choice1 \
	<$files/threepages.ps >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out multi.choice1.threepages.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log multi.choice1.threepages.out.log
    fi
    ignore=
fi

testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo do the threepages.ps with -Zmulti=nochoice1 -Zmulti=chcice2,choice3
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --lprng --ppd $ppd $debug  \
	$options -Zmulti=nochoice1 -Zmulti=choice2:choice3\
	<$files/threepages.ps >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out multi.choice23.threepages.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log multi.choice23.threepages.out.log
    fi
    ignore=
fi



testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo reprocess the previous output with no options and make
	echo sure that it picks them up
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --lprng --ppd $ppd $debug  \
	<$OUTDIR/out >$OUTDIR/out3 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out3 reprocess.multi.choice23.threepages.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log reprocess.multi.choice23.threepages.out.log
    fi
    ignore=
fi

testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo process PCL file
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --lprng --ppd $ppd $debug  \
	<$files/one.pcl >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out one.pcl.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log one.pcl.out.log
    fi
    ignore=
fi

testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo do the threepages.ps with multiple PPD files
	echo
	#debug="--debug 0x11"
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $config --lprng \
	--ppd "$ppd:$files/added.ppd" $debug  \
	$options <$files/threepages.ps >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    compare $OUTDIR/out ppd.threepages.out
    if [ -z "$debug" ] ; then
	ignore='filter.conf.test\|parse.ppd\|POSTPIPE\|status 0$'
	compare $OUTDIR/log ppd.threepages.out.log
    fi
    ignore=
fi

testnum=$(($testnum+1))
if [ $count -le 0 ] ; then exit 0; fi
if [ "$test" -eq "$testnum" ] ; then
	count=$(($count-1)); test=$(($test+1))
	echo
	echo Test $testnum
	echo try file conversion with enscript
	echo
    rm -f $OUTDIR/foomatic*
    cmd="perl -Mdiagnostics -w $foomatic $enconfig --lprng --ppd $ppd $debug  \
	$options <$files/hi.txt >$OUTDIR/out 2>$OUTDIR/log"
    runcmd
    ignore='moddatestr\|modtimestr\|page.* on.* sheet\|^%%For:\|^%%CreationDate\|title$\|rhead$\|footer$';
    compare $OUTDIR/out en.hi.ps.out
    if [ -z "$debug" ] ; then
	ignore='left in\|page.* on.* sheet\|filter.conf.test\|parse.ppd\|POSTPIPE\|status 0\|standard output$\|Logger .*0$'
	compare $OUTDIR/log en.hi.ps.out.log
    fi
    ignore=;
fi

exit 0
